{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ruitai/alpaca/frontend/src/Components/positionBox.js\";\nimport { Component } from \"react\";\nimport PCTBar from '../Components/pctBar';\n\nclass PositionBox extends Component {\n  constructor(props) {\n    super(props); //symbol\n    //qty\n    //cost (purchase cost)\n    //price (current price)\n    //api (alpaca trade api)\n    //updatePositions()\n    //Functions that need to get bound to this instance\n    //this.function = this.function.bind(this);\n\n    this.state = {\n      lastQty: null //Stores the previous sell quantity so you can re-buy the same amount\n\n    };\n  } //Exit the position at the specified price level\n\n\n  exit(price) {\n    //Callback just calls updatePositions; do we need to read the message?\n    this.props.api.sell(msg => this.props.updatePositions(), this.props.symbol, this.props.qty, \"limit\", price, \"gtc\");\n    this.setState({\n      lastQty: this.props.qty\n    });\n  } //Re-enter the position at the specified price level\n\n\n  enter(price) {\n    this.props.api.buy(() => this.props.updatePositions(), this.props.symbol, this.state.lastQty, \"limit\", price, \"gtc\");\n  }\n\n  render() {\n    let change = (this.props.price - this.props.cost) / this.props.cost;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"portfolioElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: [this.props.symbol, \" // $\", (Math.floor(this.props.price * 100) / 100).toFixed(2), \" // \", (change * 100).toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(PCTBar, {\n        symbol: this.props.symbol,\n        height: \"5\",\n        width: \"300\",\n        pctChange: change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"shares\",\n          children: \"Shares:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            float: \"right\",\n            width: \"50px\",\n            textAlign: \"center\"\n          },\n          id: \"shares\",\n          value: this.props.qty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.updatePositions,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.enter,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.exit,\n          children: \"Exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)]\n    }, this.props.symbol, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PositionBox;","map":{"version":3,"sources":["/home/ruitai/alpaca/frontend/src/Components/positionBox.js"],"names":["Component","PCTBar","PositionBox","constructor","props","state","lastQty","exit","price","api","sell","msg","updatePositions","symbol","qty","setState","enter","buy","render","change","cost","Math","floor","toFixed","float","width","textAlign"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\nimport PCTBar from '../Components/pctBar';\n\nclass PositionBox extends Component{\n    constructor(props){\n        super(props);\n        //symbol\n        //qty\n        //cost (purchase cost)\n        //price (current price)\n        //api (alpaca trade api)\n        //updatePositions()\n\n        //Functions that need to get bound to this instance\n        //this.function = this.function.bind(this);\n        this.state = {\n            lastQty: null, //Stores the previous sell quantity so you can re-buy the same amount\n        }\n    }\n\n    //Exit the position at the specified price level\n    exit(price){\n        //Callback just calls updatePositions; do we need to read the message?\n        this.props.api.sell((msg)=>this.props.updatePositions(), this.props.symbol, this.props.qty, \"limit\", price, \"gtc\")\n        this.setState({lastQty: this.props.qty})\n    }\n\n    //Re-enter the position at the specified price level\n    enter(price){\n        this.props.api.buy(()=>this.props.updatePositions(), this.props.symbol, this.state.lastQty, \"limit\", price, \"gtc\")\n    }\n\n    render(){\n        let change = (this.props.price - this.props.cost) / this.props.cost\n\n        return(\n            <fieldset className=\"portfolioElement\" key={this.props.symbol}>\n              <legend>{this.props.symbol} // ${(Math.floor(this.props.price*100)/100).toFixed(2)} // {(change*100).toFixed(2)}%</legend>\n              <PCTBar symbol={this.props.symbol} height=\"5\" width=\"300\" pctChange={change} />\n\n              <div>\n              <label htmlFor=\"shares\">Shares:</label>\n              <input style={{float:\"right\", width:\"50px\", textAlign:\"center\"}} id=\"shares\" value={this.props.qty}/>\n              </div>\n\n              <div>\n                  <button onClick={this.props.updatePositions}>Update</button>\n              </div>\n\n\n              {/*These will need conditional rendering depending on whether we're already in the position or not*/}\n              <div>\n                  <button onClick={this.enter}>Enter</button>\n              </div>\n\n              <div>\n                  <button onClick={this.exit}>Exit</button>\n              </div>\n              \n            </fieldset>\n        )\n        \n    }\n}\n\nexport default PositionBox;"]},"metadata":{},"sourceType":"module"}