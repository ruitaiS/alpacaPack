{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ruitai/alpaca/frontend/src/Components/list.js\";\nimport { Component } from \"react\";\n\nclass List extends Component {\n  constructor(props) {\n    //positions\n    //streamData\n    super(props);\n    this.renderPosition = this.renderPosition.bind(this);\n    this.state = {//Default state initialization\n    };\n  }\n\n  renderPosition(symbol, qty, cost, price) {\n    /*\n    We want to pull these from Alpaca position:\n    symbol\n    qty\n     Switch to calculating on the fly with the Polygon websocket data:\n    current_price (price per share)\n    market_value (total value of the position, for calculating % of portfolio value)\n    change_today (percent change since yesterday)\n    */\n    let change = (price - cost) / cost;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"portfolioElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: [symbol, \" // $\", this.props.get_price(symbol), \" // \", (change * 100).toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"shares\",\n          children: \"Shares:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            float: \"right\",\n            width: \"50px\",\n            textAlign: \"center\"\n          },\n          id: \"shares\",\n          value: qty\n          /*onChange={this.props.idChange}*/\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert(`Clicked ${symbol}`),\n          children: \"Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    //alert(typeof(this.props.positions))\n    let res = [];\n    let positions = []; //Only Render if Data has been instantiated\n\n    if (this.props.positions != null) {\n      for (let symbol in this.props.positions) {\n        res.push(this.renderPosition(symbol, this.props.positions[symbol].qty, this.props.positions[symbol].cost, this.props.positions[symbol].price));\n      }\n    }\n    /*\n    for (let position of positions){\n        res.push(this.renderPosition(position))\n    }*/\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"yo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/home/ruitai/alpaca/frontend/src/Components/list.js"],"names":["Component","List","constructor","props","renderPosition","bind","state","symbol","qty","cost","price","change","get_price","toFixed","float","width","textAlign","alert","render","res","positions","push"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA4B;AACxBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd;AACA;AAEA,UAAMA,KAAN;AAEA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,KAAL,GAAa,CACT;AADS,KAAb;AAGH;;AAEDF,EAAAA,cAAc,CAACG,MAAD,EAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA0B;AACpC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGQ,QAAIC,MAAM,GAAG,CAACD,KAAK,GAAGD,IAAT,IAAiBA,IAA9B;AAEA,wBACI;AAAU,MAAA,SAAS,EAAC,kBAApB;AAAA,8BACE;AAAA,mBAASF,MAAT,WAAsB,KAAKJ,KAAL,CAAWS,SAAX,CAAqBL,MAArB,CAAtB,UAAwD,CAACI,MAAM,GAAC,GAAR,EAAaE,OAAb,CAAqB,CAArB,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,gCACA;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC,OAAP;AAAgBC,YAAAA,KAAK,EAAC,MAAtB;AAA8BC,YAAAA,SAAS,EAAC;AAAxC,WAAd;AAAiE,UAAA,EAAE,EAAC,QAApE;AAA6E,UAAA,KAAK,EAAER;AAAK;;AAAzF;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAQE;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAE,MAAIS,KAAK,CAAE,WAAUV,MAAO,EAAnB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAEDW,EAAAA,MAAM,GAAE;AACJ;AACA,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,SAAS,GAAG,EAAhB,CAHI,CAKJ;;AACA,QAAI,KAAKjB,KAAL,CAAWiB,SAAX,IAAwB,IAA5B,EAAiC;AAC7B,WAAK,IAAIb,MAAT,IAAmB,KAAKJ,KAAL,CAAWiB,SAA9B,EAAwC;AACpCD,QAAAA,GAAG,CAACE,IAAJ,CAAS,KAAKjB,cAAL,CAAoBG,MAApB,EAA4B,KAAKJ,KAAL,CAAWiB,SAAX,CAAqBb,MAArB,EAA6BC,GAAzD,EAA8D,KAAKL,KAAL,CAAWiB,SAAX,CAAqBb,MAArB,EAA6BE,IAA3F,EAAiG,KAAKN,KAAL,CAAWiB,SAAX,CAAqBb,MAArB,EAA6BG,KAA9H,CAAT;AACH;AACJ;AAMD;AACR;AACA;AACA;;;AAEQ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtEuB;;AAyE5B,eAAeT,IAAf","sourcesContent":["import {Component} from \"react\";\n\nclass List extends Component{\n    constructor(props){\n        //positions\n        //streamData\n\n        super(props);\n\n        this.renderPosition = this.renderPosition.bind(this)\n        this.state = {\n            //Default state initialization\n        }\n    }\n\n    renderPosition(symbol, qty, cost, price){\n        /*\n        We want to pull these from Alpaca position:\n        symbol\n        qty\n\n        Switch to calculating on the fly with the Polygon websocket data:\n        current_price (price per share)\n        market_value (total value of the position, for calculating % of portfolio value)\n        change_today (percent change since yesterday)\n        */\n\n        let change = (price - cost) / cost\n\n        return(\n            <fieldset className=\"portfolioElement\">\n              <legend>{symbol} // ${this.props.get_price(symbol)} // {(change*100).toFixed(2)}%</legend>\n\n              <div>\n              <label htmlFor=\"shares\">Shares:</label>\n              <input style={{float:\"right\", width:\"50px\", textAlign:\"center\"}} id=\"shares\" value={qty} /*onChange={this.props.idChange}*//>\n              </div>\n\n              <div>\n                  <button onClick={()=>alert(`Clicked ${symbol}`)}>Test</button>\n              </div>\n              \n            </fieldset>\n        )\n    }\n\n    render(){\n        //alert(typeof(this.props.positions))\n        let res = []\n        let positions = []\n        \n        //Only Render if Data has been instantiated\n        if (this.props.positions != null){\n            for (let symbol in this.props.positions){\n                res.push(this.renderPosition(symbol, this.props.positions[symbol].qty, this.props.positions[symbol].cost, this.props.positions[symbol].price))\n            }\n        }\n\n        \n        \n        \n\n        /*\n        for (let position of positions){\n            res.push(this.renderPosition(position))\n        }*/\n\n        return (\n            <div>\n                yo\n            </div>\n        )        \n    }\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}