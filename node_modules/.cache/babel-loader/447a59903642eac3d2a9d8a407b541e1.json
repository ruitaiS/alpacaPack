{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ruitai/alpaca/frontend/src/Components/pctBar.js\";\nimport { Component } from \"react\";\n\nclass PCTBar extends Component {\n  constructor(props) {\n    super(props); //pctChange\n    //maxWidth\n    //scale\n\n    this.styling = this.styling.bind(this);\n    this.state = {};\n  }\n\n  styling(pctChange) {\n    let barWidth = this.props.maxWidth * Math.abs(pctChange) * this.props.scale;\n    /*\n    if (pctChange > 0){\n        //Positive Change\n        //return{transform: `translate(${this.props.maxWidth}px, 0px)`, height: \"50px\", width: `${barWidth}`, backgroundColor: \"green\"}\n        return{transform: `translate(${this.props.maxWidth}px, 0px)`, height: \"50px\", width: `${barWidth}px`, backgroundColor: \"green\"}\n    }else{\n        //Negative Change\n        //return{transform: `translate(${this.props.maxWidth - barWidth}px, 0px)`,height: \"50px\", width: `${barWidth}`, backgroundColor: \"red\"}\n        return{transform: `translate(${this.props.maxWidth - barWidth}px, 0px)`, height: \"50px\", width: `${barWidth}px`, backgroundColor: \"red\"}\n    }*/\n\n    return {\n      backgroundColor: \"green\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"green\"\n        },\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PCTBar;","map":{"version":3,"sources":["/home/ruitai/alpaca/frontend/src/Components/pctBar.js"],"names":["Component","PCTBar","constructor","props","styling","bind","state","pctChange","barWidth","maxWidth","Math","abs","scale","backgroundColor","render"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA8B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAEd;AACA;AACA;;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,KAAL,GAAa,EAAb;AAEH;;AAEDF,EAAAA,OAAO,CAACG,SAAD,EAAW;AACd,QAAIC,QAAQ,GAAG,KAAKL,KAAL,CAAWM,QAAX,GAAsBC,IAAI,CAACC,GAAL,CAASJ,SAAT,CAAtB,GAA4C,KAAKJ,KAAL,CAAWS,KAAtE;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ,WAAO;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAAP;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BAEI;AAAK,QAAA,KAAK,EAAE;AAACD,UAAAA,eAAe,EAAE;AAAlB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AApCyB;;AAuC9B,eAAeZ,MAAf","sourcesContent":["import {Component} from \"react\";\n\nclass PCTBar extends Component{\n    constructor(props){\n        super(props);\n        //pctChange\n        //maxWidth\n        //scale\n        this.styling = this.styling.bind(this);\n        this.state = {\n        }\n    }\n\n    styling(pctChange){\n        let barWidth = this.props.maxWidth * Math.abs(pctChange) * this.props.scale\n\n        /*\n        if (pctChange > 0){\n            //Positive Change\n            //return{transform: `translate(${this.props.maxWidth}px, 0px)`, height: \"50px\", width: `${barWidth}`, backgroundColor: \"green\"}\n            return{transform: `translate(${this.props.maxWidth}px, 0px)`, height: \"50px\", width: `${barWidth}px`, backgroundColor: \"green\"}\n        }else{\n            //Negative Change\n            //return{transform: `translate(${this.props.maxWidth - barWidth}px, 0px)`,height: \"50px\", width: `${barWidth}`, backgroundColor: \"red\"}\n            return{transform: `translate(${this.props.maxWidth - barWidth}px, 0px)`, height: \"50px\", width: `${barWidth}px`, backgroundColor: \"red\"}\n        }*/\n\n        return {backgroundColor: \"green\"}\n    }\n\n    render(){\n        return(\n            <div>\n                {/*<div style={this.styling(this.props.pctChange)}></div>*/}\n                <div style={{backgroundColor: \"green\", }}>hi</div>\n            </div>\n        )\n        \n    }\n}\n\nexport default PCTBar;"]},"metadata":{},"sourceType":"module"}