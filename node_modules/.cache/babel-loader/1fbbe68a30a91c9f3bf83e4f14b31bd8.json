{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ruitai/alpaca/frontend/src/Components/main.js\";\nimport { Component } from \"react\";\nimport Control from './control';\nimport API from './apiHandler';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props); //Values that get passed to the component\n\n    this.tickerChange = this.tickerChange.bind(this);\n    this.idChange = this.idChange.bind(this);\n    this.skChange = this.skChange.bind(this);\n    this.log = this.log.bind(this); //this.test = this.test.bind(this);\n\n    this.state = {\n      key_id: 'PKHGR6CVRK7DTWFIB6Q1',\n      secret_key: 'TpSauKJD8We5hu3vvXzwp2o7UrXBfR4uzxp4Z27n',\n      ticker: 'TSLA'\n    };\n    this.api = new API(this.state.key_id, this.state.secret_key, 'https://paper-api.alpaca.markets');\n  } //#region Onchange Functions (Called from Control Panel)\n  //TODO: May need to update the websocket stream & also the api handler\n  //NOTE: Using this.state.[whatever] after setState doesn't seem to update it until the next iteration;\n  //Need to directly use e.target.value\n\n\n  tickerChange(e) {\n    this.setState({\n      ticker: e.target.value\n    });\n  }\n\n  idChange(e) {\n    this.setState({\n      key_id: e.target.value\n    });\n    this.api.idChange(e.target.value);\n  }\n\n  skChange(e) {\n    this.setState({\n      secret_key: e.target.value\n    });\n    this.api.skChange(e.target.value);\n  } //#endregion\n\n\n  log(msg) {\n    console.log(msg);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.key_id, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.api.account(this.log),\n        children: \" Clicky\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        key_id: this.state.key_id,\n        secret_key: this.state.secret_key,\n        ticker: this.state.ticker,\n        idChange: this.idChange,\n        skChange: this.skChange,\n        tickerChange: this.tickerChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/ruitai/alpaca/frontend/src/Components/main.js"],"names":["Component","Control","API","Main","constructor","props","tickerChange","bind","idChange","skChange","log","state","key_id","secret_key","ticker","api","e","setState","target","value","msg","console","render","account"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA4B;AACxBI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAEd;;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AAEA,SAAKG,GAAL,GAAW,KAAKA,GAAL,CAASH,IAAT,CAAc,IAAd,CAAX,CARc,CASd;;AACA,SAAKI,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,sBADC;AAETC,MAAAA,UAAU,EAAE,0CAFH;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAMA,SAAKC,GAAL,GAAW,IAAIb,GAAJ,CAAQ,KAAKS,KAAL,CAAWC,MAAnB,EAA2B,KAAKD,KAAL,CAAWE,UAAtC,EAAkD,kCAAlD,CAAX;AACH,GAlBuB,CAoBxB;AACA;AACA;AACA;;;AACAP,EAAAA,YAAY,CAACU,CAAD,EAAI;AACZ,SAAKC,QAAL,CAAc;AAACH,MAAAA,MAAM,EAAEE,CAAC,CAACE,MAAF,CAASC;AAAlB,KAAd;AACH;;AACDX,EAAAA,QAAQ,CAACQ,CAAD,EAAI;AACR,SAAKC,QAAL,CAAc;AAACL,MAAAA,MAAM,EAAEI,CAAC,CAACE,MAAF,CAASC;AAAlB,KAAd;AACA,SAAKJ,GAAL,CAASP,QAAT,CAAkBQ,CAAC,CAACE,MAAF,CAASC,KAA3B;AACH;;AACDV,EAAAA,QAAQ,CAACO,CAAD,EAAI;AACR,SAAKC,QAAL,CAAc;AAACJ,MAAAA,UAAU,EAAEG,CAAC,CAACE,MAAF,CAASC;AAAtB,KAAd;AACA,SAAKJ,GAAL,CAASN,QAAT,CAAkBO,CAAC,CAACE,MAAF,CAASC,KAA3B;AACH,GAlCuB,CAmCxB;;;AAEAT,EAAAA,GAAG,CAACU,GAAD,EAAK;AACJC,IAAAA,OAAO,CAACX,GAAR,CAAYU,GAAZ;AACH;;AAGDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,iBACK,KAAKX,KAAL,CAAWC,MADhB,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKG,GAAL,CAASQ,OAAT,CAAiB,KAAKb,GAAtB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,OAAD;AAAS,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAA5B;AAAoC,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAA3D;AAAuE,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,MAA1F;AAAkG,QAAA,QAAQ,EAAE,KAAKN,QAAjH;AAA2H,QAAA,QAAQ,EAAE,KAAKC,QAA1I;AAAoJ,QAAA,YAAY,EAAE,KAAKH;AAAvK;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAlDuB;;AAqD5B,eAAeH,IAAf","sourcesContent":["import {Component} from \"react\";\nimport Control from './control';\nimport API from './apiHandler';\n\nclass Main extends Component{\n    constructor(props){\n        super(props);\n        //Values that get passed to the component\n\n        this.tickerChange = this.tickerChange.bind(this);\n        this.idChange = this.idChange.bind(this);\n        this.skChange = this.skChange.bind(this);\n\n        this.log = this.log.bind(this);\n        //this.test = this.test.bind(this);\n        this.state = {\n            key_id: 'PKHGR6CVRK7DTWFIB6Q1',\n            secret_key: 'TpSauKJD8We5hu3vvXzwp2o7UrXBfR4uzxp4Z27n',\n            ticker: 'TSLA',\n        }\n\n        this.api = new API(this.state.key_id, this.state.secret_key, 'https://paper-api.alpaca.markets')\n    }\n\n    //#region Onchange Functions (Called from Control Panel)\n    //TODO: May need to update the websocket stream & also the api handler\n    //NOTE: Using this.state.[whatever] after setState doesn't seem to update it until the next iteration;\n    //Need to directly use e.target.value\n    tickerChange(e) {\n        this.setState({ticker: e.target.value});\n    }\n    idChange(e) {\n        this.setState({key_id: e.target.value});\n        this.api.idChange(e.target.value)\n    }\n    skChange(e) {\n        this.setState({secret_key: e.target.value});\n        this.api.skChange(e.target.value)\n    }\n    //#endregion\n\n    log(msg){\n        console.log(msg)\n    }\n\n\n    render(){\n        return(\n            <div>\n                {this.state.key_id}\n                <button onClick={() => this.api.account(this.log)}> Clicky</button>\n                <Control key_id={this.state.key_id} secret_key={this.state.secret_key} ticker={this.state.ticker} idChange={this.idChange} skChange={this.skChange} tickerChange={this.tickerChange}/>\n            </div>\n        )\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}