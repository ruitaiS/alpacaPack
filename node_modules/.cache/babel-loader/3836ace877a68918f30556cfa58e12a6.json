{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ruitai/alpaca/frontend/src/Components/healthBar.js\";\nimport { Component } from \"react\";\n\nclass HealthBar extends Component {\n  constructor(props) {\n    super(props); //basePrice\n    //currPrice\n\n    this.state = {}; // //Bind this to its functions\n    // this.click = this.click.bind(this)\n    // this.mouseOver = this.mouseOver.bind(this)\n    // this.mouseOut = this.mouseOut.bind(this)\n    // let health = 100\n    // let color = \"green\"\n    // let healthBarText = buttonText - this.state.price\n  }\n\n  bgColor(percentChange) {\n    if (percentChange < 0) {\n      return \"red\";\n    } else {\n      return \"green\";\n    }\n  }\n\n  styling(base, curr) {\n    let netChange = curr - base;\n    let pctChange = 100 * netChange / base;\n    console.log(pctChange);\n\n    if (netChange > 0) {\n      //Positive Change\n      return {\n        height: \"50px\",\n        width: {\n          pctChange\n        },\n        backgroundColor: \"green\"\n      };\n    } else {\n      //Negative Change\n      return {\n        height: \"50px\",\n        width: \"100%\",\n        backgroundColor: \"red\"\n      };\n    }\n\n    return {\n      transform: \"translate(-33%, 0%)\",\n      height: \"50px\",\n      width: \"300%\",\n      backgroundColor: this.bgColor(curr - base)\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.basePrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.currPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.styling(this.props.basePrice, this.props.currPrice)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Percentage Change: \", 100 * (this.props.currPrice - this.props.basePrice) / this.props.basePrice, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HealthBar;","map":{"version":3,"sources":["/home/ruitai/alpaca/frontend/src/Components/healthBar.js"],"names":["Component","HealthBar","constructor","props","state","bgColor","percentChange","styling","base","curr","netChange","pctChange","console","log","height","width","backgroundColor","transform","render","basePrice","currPrice"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAEd;AACA;;AACA,SAAKC,KAAL,GAAa,EAAb,CAJc,CAOd;AACA;AACA;AACA;AAEA;AACA;AACA;AAEH;;AAEDC,EAAAA,OAAO,CAACC,aAAD,EAAe;AAClB,QAAIA,aAAa,GAAG,CAApB,EAAsB;AAClB,aAAO,KAAP;AACH,KAFD,MAEK;AACD,aAAO,OAAP;AACH;AACJ;;AAEDC,EAAAA,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAY;AACf,QAAIC,SAAS,GAAGD,IAAI,GAACD,IAArB;AACA,QAAIG,SAAS,GAAG,MAAID,SAAJ,GAAgBF,IAAhC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AAEA,QAAID,SAAS,GAAG,CAAhB,EAAkB;AACd;AACA,aAAM;AAACI,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAACJ,UAAAA;AAAD,SAAxB;AAAqCK,QAAAA,eAAe,EAAE;AAAtD,OAAN;AACH,KAHD,MAGK;AACD;AACA,aAAM;AAACF,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE,MAAxB;AAAgCC,QAAAA,eAAe,EAAE;AAAjD,OAAN;AACH;;AAED,WAAO;AAACC,MAAAA,SAAS,EAAE,qBAAZ;AAAmCH,MAAAA,MAAM,EAAE,MAA3C;AAAmDC,MAAAA,KAAK,EAAE,MAA1D;AAAkEC,MAAAA,eAAe,EAAE,KAAKX,OAAL,CAAaI,IAAI,GAAGD,IAApB;AAAnF,KAAP;AACH;;AAEDU,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAA,kBAAM,KAAKf,KAAL,CAAWgB;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAM,KAAKhB,KAAL,CAAWiB;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,KAAK,EAAE,KAAKb,OAAL,CAAa,KAAKJ,KAAL,CAAWgB,SAAxB,EAAmC,KAAKhB,KAAL,CAAWiB,SAA9C;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,0CAAyB,OAAK,KAAKjB,KAAL,CAAWiB,SAAX,GAAuB,KAAKjB,KAAL,CAAWgB,SAAvC,IAAkD,KAAKhB,KAAL,CAAWgB,SAAtF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AArD4B;;AAwDjC,eAAelB,SAAf","sourcesContent":["import {Component} from \"react\";\n\nclass HealthBar extends Component{\n    constructor(props){\n        super(props);\n        //basePrice\n        //currPrice\n        this.state = {\n        }\n\n        // //Bind this to its functions\n        // this.click = this.click.bind(this)\n        // this.mouseOver = this.mouseOver.bind(this)\n        // this.mouseOut = this.mouseOut.bind(this)\n\n        // let health = 100\n        // let color = \"green\"\n        // let healthBarText = buttonText - this.state.price\n\n    }\n\n    bgColor(percentChange){\n        if (percentChange < 0){\n            return \"red\"\n        }else{\n            return \"green\"\n        }\n    }\n\n    styling(base, curr){\n        let netChange = curr-base\n        let pctChange = 100*netChange / base\n        console.log(pctChange)\n\n        if (netChange > 0){\n            //Positive Change\n            return{height: \"50px\", width: {pctChange}, backgroundColor: \"green\"}\n        }else{\n            //Negative Change\n            return{height: \"50px\", width: \"100%\", backgroundColor: \"red\"}\n        }\n\n        return {transform: \"translate(-33%, 0%)\", height: \"50px\", width: \"300%\", backgroundColor: this.bgColor(curr - base)}\n    }\n\n    render(){\n        return(\n            <div>\n                <div>{this.props.basePrice}</div>\n                <div>{this.props.currPrice}</div>\n                <div style={this.styling(this.props.basePrice, this.props.currPrice)}></div>\n                <div>Percentage Change: {100*(this.props.currPrice - this.props.basePrice)/this.props.basePrice} %</div>\n            </div>\n        )\n        \n    }\n}\n\nexport default HealthBar;"]},"metadata":{},"sourceType":"module"}