{"ast":null,"code":"import React, { Component } from \"react\";\n\nclass Stream extends Component {\n  constructor(props) {\n    super(props);\n    this.ws = new WebSocket('wss://data.alpaca.markets/stream');\n    this.out = \"hi\";\n    this.state = {//TODO: Fill With key_id and secret_key\n    };\n  } // instance of websocket connection as a class property\n\n\n  componentDidMount() {\n    this.ws.onopen = () => {\n      // on connecting, do nothing but log it to the console\n      console.log('connected');\n      auth_data = {\n        \"action\": \"authenticate\",\n        \"data\": {\n          \"key_id\": config.API_KEY,\n          \"secret_key\": config.SECRET_KEY\n        }\n      };\n      ws.send(auth_data);\n    };\n\n    this.ws.onmessage = evt => {\n      // listen to data sent from the websocket server\n      const message = JSON.parse(evt.data);\n      this.setState({\n        dataFromServer: message\n      });\n      console.log(message);\n    };\n\n    this.ws.onclose = () => {\n      console.log('disconnected'); // automatically try to reconnect on connection loss\n    };\n  }\n\n  render() {\n    return \"Hi\";\n  }\n\n}\n\nexport default Stream;","map":{"version":3,"sources":["/home/ruitai/alpaca/frontend/src/Components/stream.js"],"names":["React","Component","Stream","constructor","props","ws","WebSocket","out","state","componentDidMount","onopen","console","log","auth_data","config","API_KEY","SECRET_KEY","send","onmessage","evt","message","JSON","parse","data","setState","dataFromServer","onclose","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAQlBC,EARkB,GAQb,IAAIC,SAAJ,CAAc,kCAAd,CARa;AAAA,SASlBC,GATkB,GASZ,IATY;AAEd,SAAKC,KAAL,GAAa,CACT;AADS,KAAb;AAGH,GAN0B,CAQ3B;;;AAIAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,EAAL,CAAQK,MAAR,GAAiB,MAAM;AACvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAC,MAAAA,SAAS,GAAG;AACR,kBAAU,cADF;AAER,gBAAQ;AAAC,oBAAUC,MAAM,CAACC,OAAlB;AAA2B,wBAAcD,MAAM,CAACE;AAAhD;AAFA,OAAZ;AAKAX,MAAAA,EAAE,CAACY,IAAH,CAAQJ,SAAR;AAGC,KAXD;;AAaA,SAAKR,EAAL,CAAQa,SAAR,GAAoBC,GAAG,IAAI;AAC3B;AACA,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAf,CAAhB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,cAAc,EAAEL;AAAjB,OAAd;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AACC,KALD;;AAOA,SAAKf,EAAL,CAAQqB,OAAR,GAAkB,MAAM;AACxBf,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADwB,CAExB;AAEC,KAJD;AAMH;;AAEDe,EAAAA,MAAM,GAAE;AACJ,WAAO,IAAP;AACH;;AA3C0B;;AA8C/B,eAAezB,MAAf","sourcesContent":["import React, { Component }from \"react\";\n\nclass Stream extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            //TODO: Fill With key_id and secret_key\n        }\n    }\n\n    // instance of websocket connection as a class property\n    ws = new WebSocket('wss://data.alpaca.markets/stream')\n    out = \"hi\"\n\n    componentDidMount() {\n        this.ws.onopen = () => {\n        // on connecting, do nothing but log it to the console\n        console.log('connected')\n        auth_data = {\n            \"action\": \"authenticate\",\n            \"data\": {\"key_id\": config.API_KEY, \"secret_key\": config.SECRET_KEY}\n        }\n    \n        ws.send(auth_data)\n\n\n        }\n\n        this.ws.onmessage = evt => {\n        // listen to data sent from the websocket server\n        const message = JSON.parse(evt.data)\n        this.setState({dataFromServer: message})\n        console.log(message)\n        }\n\n        this.ws.onclose = () => {\n        console.log('disconnected')\n        // automatically try to reconnect on connection loss\n\n        }\n\n    }\n\n    render(){\n        return(\"Hi\")\n    }\n}\n\nexport default Stream;"]},"metadata":{},"sourceType":"module"}