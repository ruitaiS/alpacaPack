{"ast":null,"code":"var _s = $RefreshSig$();\n\n//https://usehooks.com/useKeyPress/\n//https://codesandbox.io/s/y3qzyr3lrz?file=/src/use-key-press.js:0-951\nimport { useState, useEffect } from \"react\";\nexport default function useMultiKeyPress() {\n  _s();\n\n  const [keysPressed, setKeyPressed] = useState(new Set([]));\n\n  function downHandler({\n    key\n  }) {\n    setKeyPressed(keysPressed.add(key));\n  }\n\n  const upHandler = ({\n    key\n  }) => {\n    keysPressed.delete(key);\n    setKeyPressed(keysPressed);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return keysPressed;\n}\n\n_s(useMultiKeyPress, \"9fFJE8kVkI66b53v1V3SZtKifUU=\");","map":{"version":3,"sources":["/home/ruitai/alpaca/frontend/src/Components/use-multi-key-press.js"],"names":["useState","useEffect","useMultiKeyPress","keysPressed","setKeyPressed","Set","downHandler","key","add","upHandler","delete","window","addEventListener","removeEventListener"],"mappings":";;AAAA;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BJ,QAAQ,CAAC,IAAIK,GAAJ,CAAQ,EAAR,CAAD,CAA7C;;AAEA,WAASC,WAAT,CAAqB;AAAEC,IAAAA;AAAF,GAArB,EAA8B;AAC5BH,IAAAA,aAAa,CAACD,WAAW,CAACK,GAAZ,CAAgBD,GAAhB,CAAD,CAAb;AACD;;AAED,QAAME,SAAS,GAAG,CAAC;AAAEF,IAAAA;AAAF,GAAD,KAAa;AAC7BJ,IAAAA,WAAW,CAACO,MAAZ,CAAmBH,GAAnB;AACAH,IAAAA,aAAa,CAACD,WAAD,CAAb;AACD,GAHD;;AAKAF,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCN,WAAnC;AACAK,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCH,SAAjC;AACA,WAAO,MAAM;AACXE,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCP,WAAtC;AACAK,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCJ,SAApC;AACD,KAHD;AAID,GAPQ,EAON,EAPM,CAAT,CAZyC,CAmBjC;;AAER,SAAON,WAAP;AACD;;GAtBuBD,gB","sourcesContent":["//https://usehooks.com/useKeyPress/\n//https://codesandbox.io/s/y3qzyr3lrz?file=/src/use-key-press.js:0-951\nimport { useState, useEffect } from \"react\";\n\nexport default function useMultiKeyPress() {\n  const [keysPressed, setKeyPressed] = useState(new Set([]));\n\n  function downHandler({ key }) {\n    setKeyPressed(keysPressed.add(key));\n  }\n\n  const upHandler = ({ key }) => {\n    keysPressed.delete(key);\n    setKeyPressed(keysPressed);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return keysPressed;\n}\n"]},"metadata":{},"sourceType":"module"}