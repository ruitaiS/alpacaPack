{"ast":null,"code":"class API {\n  constructor(key_id, secret_key, url) {\n    this.key_id = key_id;\n    this.secret_key = secret_key;\n    this.url = url;\n  }\n\n  account(callback) {\n    let xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', () => callback(xhr.responseText));\n    xhr.open('GET', `${this.url}/v2/account`);\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.key_id);\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.secret_key);\n    xhr.send();\n  }\n\n  get(callback) {\n    let xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', () => callback(xhr.responseText));\n    xhr.open('GET', `${this.url}/v2/orders`);\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.key_id);\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.secret_key);\n    xhr.send();\n  } //Example of JSON order\n  //https://alpaca.markets/docs/trading-on-alpaca/orders/\n  //List of required parameters\n  //https://alpaca.markets/docs/api-documentation/api-v2/orders/\n\n\n  buy(callback, ticker, qty, type, time_in_force) {\n    let xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', () => callback(xhr.responseText));\n    xhr.open('POST', `${this.url}/v2/orders`);\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.key_id);\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.secret_key);\n    let order = {\n      \"side\": \"buy\",\n      \"symbol\": {\n        ticker\n      },\n      \"qty\": {\n        qty\n      },\n      \"type\": {\n        type\n      },\n      \"time_in_force\": {\n        time_in_force\n      }\n    };\n    xhr.send(JSON.stringify(order));\n  }\n\n  sell(callback, ticker, qty, type, time_in_force) {\n    let xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', () => callback(xhr.responseText));\n    xhr.open('POST', `${this.url}/v2/orders`);\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.key_id);\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.secret_key);\n    let order = {\n      \"side\": \"sell\",\n      \"symbol\": {\n        ticker\n      },\n      \"qty\": {\n        qty\n      },\n      \"type\": {\n        type\n      },\n      \"time_in_force\": {\n        time_in_force\n      }\n    };\n    xhr.send(JSON.stringify(order));\n  } //#region TODO\n\n  /*\n  \n    cancel(){\n  \n      //This Cancels all orders\n  \n      this.setState({outputText: \"Cancelled\"})\n  \n      let xhr = new XMLHttpRequest()\n  \n      xhr.addEventListener('load', () => {\n        // update the state of the component with the result here\n      })\n  \n      xhr.open('DELETE', `${this.state.paperURL}/v2/orders`)\n  \n      xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.props.key_id)\n      xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.props.secret_key)\n  \n      xhr.send()\n    }*/\n  //#endregion\n\n\n}\n\nexport default API;","map":{"version":3,"sources":["/home/ruitai/alpaca/frontend/src/Components/apiHandler.js"],"names":["API","constructor","key_id","secret_key","url","account","callback","xhr","XMLHttpRequest","addEventListener","responseText","open","setRequestHeader","send","get","buy","ticker","qty","type","time_in_force","order","JSON","stringify","sell"],"mappings":"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","sourcesContent":["class API {\n  constructor(key_id, secret_key, url) {\n    this.key_id = key_id\n    this.secret_key = secret_key\n    this.url = url\n  }\n\n  account(callback){\n    let xhr = new XMLHttpRequest()\n    xhr.addEventListener('load', ()=>callback(xhr.responseText))\n    xhr.open('GET', `${this.url}/v2/account`)\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.key_id)\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.secret_key)\n    xhr.send()\n  }\n\n  get(callback){\n      let xhr = new XMLHttpRequest()\n      xhr.addEventListener('load', ()=>callback(xhr.responseText))\n      xhr.open('GET', `${this.url}/v2/orders`)\n      xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.key_id)\n      xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.secret_key)\n      xhr.send()\n\n  }\n\n\n    //Example of JSON order\n    //https://alpaca.markets/docs/trading-on-alpaca/orders/\n\n    //List of required parameters\n    //https://alpaca.markets/docs/api-documentation/api-v2/orders/\n    \n  buy(callback, ticker, qty, type, time_in_force){      \n    let xhr = new XMLHttpRequest()\n    xhr.addEventListener('load', ()=>callback(xhr.responseText))\n    xhr.open('POST', `${this.url}/v2/orders`)\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.key_id)\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.secret_key)\n\n    let order = {\n      \"side\" : \"buy\",\n      \"symbol\": {ticker},\n      \"qty\" : {qty},\n      \"type\": {type},\n      \"time_in_force\": {time_in_force}\n    }\n\n    xhr.send(JSON.stringify(order))\n}\n  sell(callback, ticker, qty, type, time_in_force){\n    let xhr = new XMLHttpRequest()\n    xhr.addEventListener('load', ()=>callback(xhr.responseText))\n    xhr.open('POST', `${this.url}/v2/orders`)\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.key_id)\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.secret_key)\n\n    let order = {\n      \"side\" : \"sell\",\n      \"symbol\": {ticker},\n      \"qty\" : {qty},\n      \"type\": {type},\n      \"time_in_force\": {time_in_force}\n    }\n\n    xhr.send(JSON.stringify(order))\n  }\n\n  //#region TODO\n/*\n\n  cancel(){\n\n    //This Cancels all orders\n\n    this.setState({outputText: \"Cancelled\"})\n\n    let xhr = new XMLHttpRequest()\n\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n    })\n\n    xhr.open('DELETE', `${this.state.paperURL}/v2/orders`)\n\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.props.key_id)\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.props.secret_key)\n\n    xhr.send()\n  }*/\n  //#endregion\n\n}\n\nexport default API;"]},"metadata":{},"sourceType":"module"}