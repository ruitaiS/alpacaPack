{"ast":null,"code":"import React, { Component } from \"react\";\n\nclass Stream extends Component {\n  constructor(props) {\n    super(props);\n    this.ws = new WebSocket('wss://data.alpaca.markets/stream');\n    this.out = \"hi\";\n    this.state = {\n      key_id: 'PKHGR6CVRK7DTWFIB6Q1',\n      secret_key: 'TpSauKJD8We5hu3vvXzwp2o7UrXBfR4uzxp4Z27n'\n    };\n  } // instance of websocket connection as a class property\n\n\n  componentDidMount() {\n    this.ws.onopen = () => {\n      // on connecting, do nothing but log it to the console\n      console.log('connected');\n      let auth_data = {\n        \"action\": \"authenticate\",\n        \"data\": {\n          \"key_id\": this.state.key_id,\n          \"secret_key\": this.state.secret_key\n        }\n      };\n      ws.send(JSON.stringify(auth_data));\n    };\n\n    this.ws.onmessage = evt => {\n      // listen to data sent from the websocket server\n      const message = JSON.parse(evt.data);\n      this.setState({\n        dataFromServer: message\n      });\n      console.log(message);\n    };\n\n    this.ws.onclose = () => {\n      console.log('disconnected'); // automatically try to reconnect on connection loss\n    };\n  }\n\n  render() {\n    return \"Hi\";\n  }\n\n}\n\nexport default Stream;","map":{"version":3,"sources":["/home/ruitai/alpaca/frontend/src/Components/stream.js"],"names":["React","Component","Stream","constructor","props","ws","WebSocket","out","state","key_id","secret_key","componentDidMount","onopen","console","log","auth_data","send","JSON","stringify","onmessage","evt","message","parse","data","setState","dataFromServer","onclose","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SASlBC,EATkB,GASb,IAAIC,SAAJ,CAAc,kCAAd,CATa;AAAA,SAUlBC,GAVkB,GAUZ,IAVY;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,sBADC;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH,GAP0B,CAS3B;;;AAIAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,EAAL,CAAQO,MAAR,GAAiB,MAAM;AACvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,UAAIC,SAAS,GAAG;AACZ,kBAAU,cADE;AAEZ,gBAAQ;AAAC,oBAAU,KAAKP,KAAL,CAAWC,MAAtB;AAA8B,wBAAc,KAAKD,KAAL,CAAWE;AAAvD;AAFI,OAAhB;AAKAL,MAAAA,EAAE,CAACW,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAR;AAGC,KAXD;;AAaA,SAAKV,EAAL,CAAQc,SAAR,GAAoBC,GAAG,IAAI;AAC3B;AACA,YAAMC,OAAO,GAAGJ,IAAI,CAACK,KAAL,CAAWF,GAAG,CAACG,IAAf,CAAhB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,cAAc,EAAEJ;AAAjB,OAAd;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYO,OAAZ;AACC,KALD;;AAOA,SAAKhB,EAAL,CAAQqB,OAAR,GAAkB,MAAM;AACxBb,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADwB,CAExB;AAEC,KAJD;AAMH;;AAEDa,EAAAA,MAAM,GAAE;AACJ,WAAO,IAAP;AACH;;AA5C0B;;AA+C/B,eAAezB,MAAf","sourcesContent":["import React, { Component }from \"react\";\n\nclass Stream extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            key_id: 'PKHGR6CVRK7DTWFIB6Q1',\n            secret_key: 'TpSauKJD8We5hu3vvXzwp2o7UrXBfR4uzxp4Z27n',\n        }\n    }\n\n    // instance of websocket connection as a class property\n    ws = new WebSocket('wss://data.alpaca.markets/stream')\n    out = \"hi\"\n\n    componentDidMount() {\n        this.ws.onopen = () => {\n        // on connecting, do nothing but log it to the console\n        console.log('connected')\n        let auth_data = {\n            \"action\": \"authenticate\",\n            \"data\": {\"key_id\": this.state.key_id, \"secret_key\": this.state.secret_key}\n        }\n    \n        ws.send(JSON.stringify(auth_data))\n\n\n        }\n\n        this.ws.onmessage = evt => {\n        // listen to data sent from the websocket server\n        const message = JSON.parse(evt.data)\n        this.setState({dataFromServer: message})\n        console.log(message)\n        }\n\n        this.ws.onclose = () => {\n        console.log('disconnected')\n        // automatically try to reconnect on connection loss\n\n        }\n\n    }\n\n    render(){\n        return(\"Hi\")\n    }\n}\n\nexport default Stream;"]},"metadata":{},"sourceType":"module"}