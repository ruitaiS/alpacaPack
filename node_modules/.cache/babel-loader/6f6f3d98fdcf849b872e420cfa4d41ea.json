{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ruitai/alpaca/frontend/src/Components/priceButton.js\";\nimport { Component } from \"react\"; //Generic button that takes a price stream, \n\nclass PriceBtn extends Component {\n  constructor(props) {\n    super(props); //text - The text displayed on the button\n    //price - live price data that comes in\n    //click - function that gets called when the button is clicked\n    //Functions that need to get bound to this instance\n    //this.function = this.function.bind(this);\n\n    this.mouseOver = this.mouseOver.bind(this);\n    this.mouseOut = this.mouseOut.bind(this);\n    this.click = this.click.bind(this);\n    this.state = {//Default state initialization\n    };\n    this.testText;\n  }\n\n  mouseOver() {\n    console.log(\"MouseOver\");\n    this.setState({\n      holdPrice: this.props.price\n    });\n    this.testText = this.state.holdPrice;\n  }\n\n  mouseOut() {\n    console.log(\"MouseOut\");\n    this.setState({\n      holdPrice: null\n    });\n  }\n\n  click() {\n    alert(`Button passes: ${this.state.holdPrice}`);\n    this.props.click(this.state.holdPrice);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bigBtn\",\n        onClick: this.click,\n        onMouseOver: this.mouseOver,\n        onMouseOut: this.mouseOut,\n        children: [this.props.text, \": $\", this.state.holdPrice != null ? this.state.holdPrice : this.props.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default PriceBtn;","map":{"version":3,"sources":["/home/ruitai/alpaca/frontend/src/Components/priceButton.js"],"names":["Component","PriceBtn","constructor","props","mouseOver","bind","mouseOut","click","state","testText","console","log","setState","holdPrice","price","alert","render","text"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB,C,CAEA;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAgC;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAEd;AACA;AACA;AAEA;AACA;;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,KAAL,GAAa,KAAKA,KAAL,CAAWF,IAAX,CAAgB,IAAhB,CAAb;AAEA,SAAKG,KAAL,GAAa,CACT;AADS,KAAb;AAIA,SAAKC,QAAL;AACH;;AAEDL,EAAAA,SAAS,GAAE;AACPM,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,SAAKC,QAAL,CAAc;AAACC,MAAAA,SAAS,EAAE,KAAKV,KAAL,CAAWW;AAAvB,KAAd;AACA,SAAKL,QAAL,GAAgB,KAAKD,KAAL,CAAWK,SAA3B;AACH;;AAEDP,EAAAA,QAAQ,GAAE;AACNI,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,SAAKC,QAAL,CAAc;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACH;;AAEDN,EAAAA,KAAK,GAAE;AACHQ,IAAAA,KAAK,CAAE,kBAAiB,KAAKP,KAAL,CAAWK,SAAU,EAAxC,CAAL;AACA,SAAKV,KAAL,CAAWI,KAAX,CAAiB,KAAKC,KAAL,CAAWK,SAA5B;AACH;;AAEDG,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,KAAKT,KAAzC;AAAgD,QAAA,WAAW,EAAE,KAAKH,SAAlE;AAA6E,QAAA,UAAU,EAAE,KAAKE,QAA9F;AAAA,mBAAyG,KAAKH,KAAL,CAAWc,IAApH,SAA6H,KAAKT,KAAL,CAAWK,SAAX,IAAwB,IAAxB,GAA+B,KAAKL,KAAL,CAAWK,SAA1C,GAAsD,KAAKV,KAAL,CAAWW,KAA9L;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAMH;;AA3C2B;;AA8ChC,eAAeb,QAAf","sourcesContent":["import {Component} from \"react\";\n\n//Generic button that takes a price stream, \n\nclass PriceBtn extends Component{\n    constructor(props){\n        super(props);\n        //text - The text displayed on the button\n        //price - live price data that comes in\n        //click - function that gets called when the button is clicked\n\n        //Functions that need to get bound to this instance\n        //this.function = this.function.bind(this);\n        this.mouseOver = this.mouseOver.bind(this);\n        this.mouseOut = this.mouseOut.bind(this);\n        this.click = this.click.bind(this);\n\n        this.state = {\n            //Default state initialization\n        }\n\n        this.testText\n    }\n\n    mouseOver(){\n        console.log(\"MouseOver\")\n        this.setState({holdPrice: this.props.price})\n        this.testText = this.state.holdPrice\n    }\n\n    mouseOut(){\n        console.log(\"MouseOut\")\n        this.setState({holdPrice: null})\n    }\n\n    click(){\n        alert(`Button passes: ${this.state.holdPrice}`)\n        this.props.click(this.state.holdPrice)\n    }\n\n    render(){\n        return(\n        <div>\n            <button className=\"bigBtn\" onClick={this.click} onMouseOver={this.mouseOver} onMouseOut={this.mouseOut}>{this.props.text}: ${this.state.holdPrice != null ? this.state.holdPrice : this.props.price}</button>\n        </div>\n        )\n        \n    }\n}\n\nexport default PriceBtn;"]},"metadata":{},"sourceType":"module"}