{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ruitai/alpaca/frontend/src/Components/apiHandler.js\";\nimport React, { Component } from 'react';\n\nclass API extends Component {\n  constructor(props) {\n    super(props);\n    this.account = this.account.bind(this);\n    this.get = this.get.bind(this);\n    this.buy = this.buy.bind(this);\n    this.sell = this.sell.bind(this);\n    this.cancel = this.cancel.bind(this);\n    this.state = {\n      liveURL: \"https://api.alpaca.markets\",\n      paperURL: \"https://paper-api.alpaca.markets\",\n      outputText: \" \",\n      responseText: \" \"\n    }; //Props:\n    //key_id\n    //secret_key\n    //ticker\n    //qty\n    //side\n    //price\n  }\n\n  account() {\n    let xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      console.log(xhr.responseText);\n      this.setState({\n        outputText: \"Got Account Details\"\n      });\n      this.setState({\n        responseText: xhr.responseText\n      });\n    });\n    xhr.open('GET', `${this.state.paperURL}/v2/account`);\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.props.key_id);\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.props.secret_key);\n    xhr.send();\n  }\n\n  get() {\n    let xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      console.log(xhr.responseText);\n      this.setState({\n        outputText: \"Got Orders\"\n      });\n      this.setState({\n        responseText: xhr.responseText\n      });\n    });\n    xhr.open('GET', `${this.state.paperURL}/v2/orders`);\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.props.key_id);\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.props.secret_key);\n    xhr.send();\n  }\n\n  buy() {\n    let xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      console.log(xhr.responseText);\n      this.setState({\n        outputText: \"Submitted Order\"\n      });\n      this.setState({\n        responseText: xhr.responseText\n      });\n    });\n    xhr.open('POST', `${this.state.paperURL}/v2/orders`);\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.props.key_id);\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.props.secret_key); //Example of JSON order\n    //https://alpaca.markets/docs/trading-on-alpaca/orders/\n    //List of required parameters\n    //https://alpaca.markets/docs/api-documentation/api-v2/orders/\n\n    let order = {\n      \"side\": \"buy\",\n      \"symbol\": \"TSLA\",\n      \"qty\": \"1\",\n      \"type\": \"market\",\n      \"time_in_force\": \"gtc\"\n    };\n    xhr.send(JSON.stringify(order));\n  }\n\n  sell() {\n    this.setState({\n      outputText: \"Sell Submitted\"\n    });\n  }\n\n  cancel() {\n    this.setState({\n      outputText: \"Cancelled\"\n    });\n    let xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', () => {// update the state of the component with the result here\n    });\n    xhr.open('DELETE', `${this.state.paperURL}/v2/orders`);\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.props.key_id);\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.props.secret_key);\n    xhr.send();\n  }\n\n  render() {\n    //Test API call functionality using buttons\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: [this.state.outputText, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bigBtn\",\n            onClick: this.account,\n            children: \"Account Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bigBtn\",\n            onClick: this.get,\n            children: \"Get\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bigBtn\",\n            onClick: this.buy,\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bigBtn\",\n            onClick: this.sell,\n            children: \"Sell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bigBtn\",\n            onClick: this.cancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default API;","map":{"version":3,"sources":["/home/ruitai/alpaca/frontend/src/Components/apiHandler.js"],"names":["React","Component","API","constructor","props","account","bind","get","buy","sell","cancel","state","liveURL","paperURL","outputText","responseText","xhr","XMLHttpRequest","addEventListener","console","log","setState","open","setRequestHeader","key_id","secret_key","send","order","JSON","stringify","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nclass API extends Component {\n  constructor(props) {\n    super(props)\n    this.account = this.account.bind(this)\n    this.get = this.get.bind(this)\n    this.buy = this.buy.bind(this)\n    this.sell = this.sell.bind(this)\n    this.cancel = this.cancel.bind(this)\n    this.state = {\n      liveURL: \"https://api.alpaca.markets\",\n      paperURL: \"https://paper-api.alpaca.markets\",\n      outputText: \" \",\n      responseText: \" \",\n  }\n\n\n    //Props:\n    //key_id\n    //secret_key\n    //ticker\n    //qty\n    //side\n    //price\n  }\n\n  account(){\n      \n    let xhr = new XMLHttpRequest()\n\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      console.log(xhr.responseText)\n      this.setState({outputText: \"Got Account Details\"})\n      this.setState({responseText: xhr.responseText})\n    })\n\n    xhr.open('GET', `${this.state.paperURL}/v2/account`)\n\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.props.key_id)\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.props.secret_key)\n\n    xhr.send()\n\n}\n\n  get(){\n      \n      let xhr = new XMLHttpRequest()\n\n      xhr.addEventListener('load', () => {\n        // update the state of the component with the result here\n        console.log(xhr.responseText)\n        this.setState({outputText: \"Got Orders\"})\n        this.setState({responseText: xhr.responseText})\n      })\n\n      xhr.open('GET', `${this.state.paperURL}/v2/orders`)\n\n      xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.props.key_id)\n      xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.props.secret_key)\n\n      xhr.send()\n\n  }\n\n  buy(){      \n    let xhr = new XMLHttpRequest()\n\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      console.log(xhr.responseText)\n      this.setState({outputText: \"Submitted Order\"})\n      this.setState({responseText: xhr.responseText})\n    })\n\n    xhr.open('POST', `${this.state.paperURL}/v2/orders`)\n\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.props.key_id)\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.props.secret_key)\n\n    //Example of JSON order\n    //https://alpaca.markets/docs/trading-on-alpaca/orders/\n\n    //List of required parameters\n    //https://alpaca.markets/docs/api-documentation/api-v2/orders/\n\n    let order = {\n      \"side\" : \"buy\",\n      \"symbol\": \"TSLA\",\n      \"qty\" : \"1\",\n      \"type\": \"market\",\n      \"time_in_force\": \"gtc\"\n    }\n\n    xhr.send(JSON.stringify(order))\n}\n\n  sell(){\n    this.setState({outputText: \"Sell Submitted\"})\n  }\n\n  cancel(){\n    this.setState({outputText: \"Cancelled\"})\n\n    let xhr = new XMLHttpRequest()\n\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n    })\n\n    xhr.open('DELETE', `${this.state.paperURL}/v2/orders`)\n\n    xhr.setRequestHeader(\"APCA-API-KEY-ID\", this.props.key_id)\n    xhr.setRequestHeader(\"APCA-API-SECRET-KEY\", this.props.secret_key)\n\n    xhr.send()\n  }\n\n\n  render() {\n    //Test API call functionality using buttons\n    return (\n      <div className=\"centered\">\n        {/*this.state.responseText*/}\n        {this.state.outputText}\n        <div className=\"row\">\n          <div><button className=\"bigBtn\" onClick={this.account}>Account Details</button></div>\n          <div><button className=\"bigBtn\" onClick={this.get}>Get</button></div>\n          <div><button className=\"bigBtn\" onClick={this.buy}>Buy</button></div>\n          <div><button className=\"bigBtn\" onClick={this.sell}>Sell</button></div>\n          <div><button className=\"bigBtn\" onClick={this.cancel}>Cancel</button></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default API;"]},"metadata":{},"sourceType":"module"}